<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Docker启动Nginx部署前端项目</title>
      <link href="/2023/08/08/Docker%E5%90%AF%E5%8A%A8Nginx%E9%83%A8%E7%BD%B2%E5%89%8D%E7%AB%AF%E9%A1%B9%E7%9B%AE/"/>
      <url>/2023/08/08/Docker%E5%90%AF%E5%8A%A8Nginx%E9%83%A8%E7%BD%B2%E5%89%8D%E7%AB%AF%E9%A1%B9%E7%9B%AE/</url>
      
        <content type="html"><![CDATA[<ol><li><p>运行下列命令拉取镜像</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull nginx:(版本号)</span><br></pre></td></tr></table></figure></li><li><p>运行以下命令创建容器</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name nginx -p 80:80 nginx:(版本号)</span><br></pre></td></tr></table></figure></li><li><p>将需要的nginx文件从容器中复制到本地</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#创建三个文件夹</span></span><br><span class="line"><span class="built_in">mkdir</span> -p /mydata/nginx/html</span><br><span class="line"><span class="built_in">mkdir</span> -p /mydata/nginx/logs</span><br><span class="line"><span class="built_in">mkdir</span> -p /mydata/nginx/conf</span><br><span class="line"></span><br><span class="line"><span class="comment">#执行以下命令把容器内的配置文件拷贝到本地的/mydata/nginx/conf/ 下</span></span><br><span class="line">docker container <span class="built_in">cp</span> nginx:/etc/nginx /mydata/nginx/conf/</span><br><span class="line"></span><br><span class="line"> <span class="comment">#由于拷贝完成后会在config中存在一个nginx文件夹，所以需要将它的内容移动到conf中</span></span><br><span class="line"><span class="built_in">mv</span> /mydata/nginx/conf/nginx/* /mydata/nginx/conf/</span><br><span class="line"><span class="built_in">rm</span> -rf /mydata/nginx/conf/nginx</span><br></pre></td></tr></table></figure></li><li><p>停止并删除原来的容器</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker stop nginx</span><br><span class="line">docker <span class="built_in">rm</span> nginx</span><br></pre></td></tr></table></figure></li><li><p>重新运行一个容器，并把刚才复制出来的目录进行挂载</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -p 80:80 --name nginx \</span><br><span class="line">-v /var/lib/nginx_data/nginx/html:/usr/share/nginx/html \</span><br><span class="line">-v /var/lib/nginx_data/nginx/logs:/var/log/nginx \</span><br><span class="line">-v /var/lib/nginx_data/nginx/conf/:/etc/nginx \</span><br><span class="line">--privileged \</span><br><span class="line">-d nginx:latest</span><br></pre></td></tr></table></figure></li><li><p>此时直接访问ip地址，看见如下信息则部署成功</p><p><img src="https://gitee.com/Adagio7_5/md_image/raw/master/md_image/202306292144369.png" alt="image-20230629214459264"></p></li><li><p>此时我们需要把我们的前端文件上传到服务器，然后在配置文件里指定地址</p></li><li><p>接下来只需要修改刚刚挂载的nginx.conf文件就行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">user  root;     #如果默认配置文件的user是其他值，且访问nginx时还是报403，可以改成root</span><br><span class="line">worker_processes  auto;</span><br><span class="line"></span><br><span class="line">error_log  /var/log/nginx/error.log notice;</span><br><span class="line">pid        /var/run/nginx.pid;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections  1024;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">    include       /etc/nginx/mime.types;</span><br><span class="line">    default_type  application/octet-stream;</span><br><span class="line"></span><br><span class="line">    log_format  main  &#x27;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#x27;</span><br><span class="line">                      &#x27;$status $body_bytes_sent &quot;$http_referer&quot; &#x27;</span><br><span class="line">                      &#x27;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#x27;;</span><br><span class="line"></span><br><span class="line">    access_log  /var/log/nginx/access.log  main;</span><br><span class="line"></span><br><span class="line">    sendfile        on;</span><br><span class="line">    #tcp_nopush     on;</span><br><span class="line"></span><br><span class="line">    keepalive_timeout  65;</span><br><span class="line"></span><br><span class="line">    #gzip  on;</span><br><span class="line"></span><br><span class="line">    #include /etc/nginx/conf.d/*.conf;   </span><br><span class="line">    #上面注释的配置代表启动时的配置会包括conf.d底下的其他配置，不注释可能会有其他问题</span><br><span class="line">#下面的配置根据自己的实际情况配置</span><br><span class="line">server &#123;</span><br><span class="line">listen80;#代表监听端口号，默认80</span><br><span class="line">server_name localhost;</span><br><span class="line">#这意味着当有请求发送到这台服务器的80端口时，Nginx会匹配请求中的Host标头，如果与localhost匹配，就会将请求交给这个配置块处理。</span><br><span class="line"></span><br><span class="line">location / &#123;</span><br><span class="line">#根路径资源访问地址，如果是自己挂载的话，就得找到容器内挂载的文件地址</span><br><span class="line">root/usr/share/nginx/html/adagio-search-frontend;</span><br><span class="line">indexindex.html index.htm;#代表访问哪个文件，默认即可</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/08/08/hello-world/"/>
      <url>/2023/08/08/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
